---
title: "Interval-censoring examples"
format: html
editor: visual
---

This document contains the code used to analyse the duser dataset and produce the figures found in the example sections of the methodology chapter.

```{r}
#Loading in required packages
library(interval)
library(FHtest)
library(Cairo)
library(survival)
```

## Estimating the survival curve

### NPMLE

```{r}
data(duser)
#Setting right censored observations to NA to be handled appropriately by icfit function
duser.edit <- duser |>
  dplyr::mutate(right=ifelse(right==9999,NA,right))

#NPMLE estimate
duser.NPMLE <- interval::icfit(Surv(left,right,type = "interval2")~zgen,data=duser.edit)


png("sc duser.png")
plot(duser.NPMLE,
     XLAB = "Time until HIV-infection (weeks)",
     YLAB = "Survival probability",
     LEGEND=F)
legend("topright",lty = c(1,2),
       col = c("black","black"),
       legend=c("Male","Female"),
       box.lty=0)
dev.off()
```

### Parametric estimation

```{r}
#Parametric estimation of men
duser.edit.men <- duser |>
  dplyr::mutate(right=ifelse(right==9999,NA,right),
                left=ifelse(left==0,NA,left)) |>
  dplyr::filter(zgen==0)

duser.fit <- list()
duser.fit[["lognormal"]] <- survreg(Surv(left,right,type = "interval2")~1,data=duser.edit.men,dist="lognormal")
duser.fit[["loglogistic"]] <- survreg(Surv(left,right,type = "interval2")~1,data=duser.edit.men,dist="loglogistic")
duser.fit[["weibull"]] <- survreg(Surv(left,right,type = "interval2")~1,data=duser.edit.men,dist="weibull")

#Creating dataset of AIC and BIC for 3 survial curve fits
n <- nrow(duser)
nu0 <- 2               ## number of parameters
loglik <- sapply(duser.fit, "[[", "loglik")[2,]    ## Log-likelihoods
AIC <- -2 * loglik + 2 * nu0
BIC <- -2 * loglik + log(n) * nu0
ModelFit.aft <- data.frame(LogLik = loglik, AIC = AIC, BIC = BIC)
print(round(ModelFit.aft, 1))

#loglogistic is best parametric fit


#Creating plot of NPMLE and the three parametric survival curves for male cohort

#NPMLE for the male cohort
duser.NPMLE.men <- interval::icfit(Surv(left,right,type = "interval2")~1,data=duser.edit.men)

#Creating values used to plot log-logistic line
t=seq(from=0,to=250,by=0.1)
d.S.ll <- 1/(1+(t*exp(-duser.fit[["loglogistic"]]$coefficients[[1]]))^(1/duser.fit[["loglogistic"]]$scale[[1]]))

#Extracting intercept value from weibull model to use in plotting weibull curve
theta.weib <- exp(-duser.fit[["weibull"]]$coefficients[[1]])

png("duser_para_surv.png")
plot(duser.NPMLE.men,
     LEGEND=F,
     XLAB = "Time until HIV-infection (weeks)",
     YLAB = "Survival probability")
curve(plnorm(x,meanlog=duser.fit[["lognormal"]]$coefficients[[1]],sdlog=duser.fit[["lognormal"]]$scale,lower.tail=FALSE),
                      from=0,to=250,add=TRUE,col="blue")
lines(x=t,y=d.S.ll,col="red")
curve(expr = exp(-(theta.weib*x)^(1/duser.fit[["weibull"]]$scale)),
      from=0,to=250,add=T,col="orange")
legend("topright",lty = c(1,1,1,1),
       col = c("black","blue","red","orange"),
       legend=c("NPMLE","Parametric log-normal","Parametric log-logistic","Parametric weibull"),
       box.lty=0)
dev.off()
```

### Calculating median

```{r}
#Finding median for Male cohort
NPMLE.male <- unlist(duser.NPMLE$pf)[1:25]
which(cumsum(unname(NPMLE.male))>0.5)[1] #12th interval contains median
names(NPMLE.male)[12] #median between (52, 53]

plot(duser.NPMLE)
abline(h=0.5)
abline(v=52)
abline(v=53)

#imputing median value
(53+52)/2#linear 52.5
52+log(2)*(53-52)/2 #exponential 52.3

#Finding median for female cohort
NPMLE.female <- unlist(duser.NPMLE$pf)[26:36]
which(cumsum(unname(NPMLE.female))>0.5)[1] #4th interval
names(NPMLE.female)[4] #median between (21, 23]

plot(duser.NPMLE)
abline(h=0.5)
abline(v=21)
abline(v=23)

#imputing median value
(21+23)/2 #linear 22
21+log(2)*(23-21)/2 #exponential 21.7
```

## Statistical tests

### Suns scores

```{r}
sun.test <- ictest(Surv(left, right, type = "interval2") ~ zgen, data=duser.edit, scores="logrank2", method="pclt", icontrol=icfitControl(maxit=100000)) 
sun.test
```

```         
```

### Selecting test

```{r}
plot(duser.NPMLE,dtype="link")#complementary log-log link
plot(duser.NPMLE,dlink=qlogis,dtype="link")
plot(duser.NPMLE,dlink=qnorm,dtype="link")
```

### FH test

```{r}
#as standard set which reduces test to standard log-rank test (emphasises late differences in survival)
# log-rank type test
with(FHtesticp(left,right,group=zgen,rho=0,lambda=0,method="pclt"),data=duser)
#early differences
with(FHtesticp(left,right,group=zgen,rho=1,lambda=0,method="pclt"),data=duser)
#middle differences
with(FHtesticp(left,right,group=zgen,rho=1,lambda=1,method="pclt"),data=duser)
#end differences
with(FHtesticp(left,right,group=zgen,rho=0,lambda=1,method="pclt"),data=duser)
```

```{r}
wmw.test <- ictest(Surv(left, right, type = "interval2") ~ zgen, data=duser, scores="wmw", method="pclt", icontrol=icfitControl(maxit=100000))

#Extracting values of test statistic manually
X <- NULL
X$male <- ifelse(duser.edit$zgen==0,1,0)
X$female<- ifelse(duser.edit$zgen==1,1,0)
X <- as.data.frame(X)
#calculating X_bar
X$male <- X$male-mean(X$male)
X$female <- X$female-mean(X$female)
#calculating V
X <- as.matrix(X)
V <- (1/(nrow(X)-1))*sum(wmw.test$scores^2)*t(X)%*%X
U <- as.matrix(wmw.test$U)
G <- (U[1]/sqrt(V[1,1]))^2 #agrees with Z^2 value
1-pchisq(3.4445,1)
```

## Proportional hazards model

### Parametric PH model

```{r}
#Creating parametric PH models
duser.para.ph <- list()

duser.para.ph[["weibull"]] <-icenReg::ic_par(Surv(left,right,type="interval2")~zgen,data 
                                              =duser.edit,model="ph",dist="weibull")
duser.para.ph[["lognormal"]] <- icenReg::ic_par(Surv(left,right,type="interval2")~zgen,data 
                                              =duser.edit,model="ph",dist="lnorm")
duser.para.ph[["loglogistic"]] <- icenReg::ic_par(Surv(left,right,type="interval2")~zgen,data=duser.edit,model="ph",dist="loglogistic")
duser.para.ph[["gamma"]] <- icenReg::ic_par(Surv(left,right,type="interval2")~zgen,data 
                                              =duser.edit,model="ph",dist="gamma")

n <- nrow(duser.edit)
nu0 <- 3               ## number of parameters
loglik <- sapply(duser.para.ph, "[[", "llk")    ## Log-likelihoods
AIC <- -2 * loglik + 2 * nu0
BIC <- -2 * loglik + log(n) * nu0
ModelFit.para.ph <- data.frame(LogLik = loglik, AIC = AIC, BIC = BIC)
print(round(ModelFit.para.ph, 1))
#loglogistic is best fitting model
para.ph.duser <- duser.para.ph[["loglogistic"]]
summary(para.ph.duser)
exp(confint(para.ph.duser))

new_data <- data.frame(zgen = c(0,1))
rownames(new_data) <- c('male',"female")

png("duser para ph.png")
plot(duser.NPMLE,
     xlim=c(0,250),
     LEGEND = F,
     XLAB = "Time until HIV-infection (weeks)",
     YLAB = "Survival probability")
lines(para.ph.duser, new_data,
      col=c("blue","red"))
legend("topright",lty = c(1,2,1,1),
       col = c("black","black","blue","red"),
       legend=c("NPMLE male","NPMLE female","Parametric PH male","Parametric PH female"),
       box.lty=0)
dev.off()
```

### SP PH model

```{r}
set.seed(123)
#Fitting semi-parametric proportional hazards model
sp.ph.duser <- icenReg::ic_sp(Surv(left,right,type="interval2")~zgen,
                               data=duser.edit,model="ph",
                               bs_samples = 1000)
summary(sp.ph.duser)
exp(confint(sp.ph.duser))

#Plotting NPMLE and SP PH model
png("duser SP PH.png")
plot(duser.NPMLE,
     xlim=c(0,250),
     LEGEND = F,
     XLAB = "Time until HIV-infection (weeks)",
     YLAB = "Survival probability")
lines(sp.ph.duser, new_data,
     col=c("blue","red"))
legend("topright",lty = c(1,2,1,1),
       col = c("black","black","blue","red"),
       legend=c("NPMLE male","NPMLE female","SP PH male","SP PH female"),
       box.lty=0)
dev.off()
```

### Extra plots

```{r}
#NPMLE parametric and smei-parametric PH model plot
png("duser PH tests.png")
plot(duser.NPMLE,
     xlim=c(0,250),
     LEGEND = F,
     XLAB = "Time until HIV-infection (weeks)",
     YLAB = "Survival probability")
lines(sp.ph.duser, new_data,
     col=c("blue","red"))
lines(para.ph.duser, new_data,
      col=c("dodgerblue","orange"))
legend("topright",lty = c(1,2,1,1,1,1),
       col = c("black","black","blue","red","dodgerblue","orange"),
       legend=c("NPMLE male","NPMLE female","SP PH male","SP PH female","Parametric PH male","Parametric PH female"),
       box.lty=0)
dev.off()

#testing PH assumption
png("semipara_PH_duser_PHtest.png")
icenReg::diag_covar(sp.ph.duser,varName = "zgen",main="",
                    lgdLocation = c(-100,-100))
legend("topright",lty = c(1,1),
       col = c("red","green"),
       legend=c("male","female"),
       box.lty=0)
dev.off()
```

## AFT models

```{r}
#AFT models
duser.aft.data <- duser.edit |>
  dplyr::mutate(left=ifelse(left==0,NA,left))

#fitting parametric AFT models
duser.aft <- list()
duser.aft[["weibull"]] <- survreg(Surv(left,right,type = "interval2")~zgen+age,
                             data=duser.aft.data,dist="weibull")
duser.aft[["lognormal"]] <- survreg(Surv(left,right,type = "interval2")~zgen+age,
                               data=duser.aft.data,dist="lognormal")
duser.aft[["loglogistic"]] <- survreg(Surv(left,right,type = "interval2")~zgen+age,
                                 data=duser.aft.data,dist="loglogistic")

n <- nrow(duser.aft.data)
nu0 <- 4                 ## number of parameters

loglik <- sapply(duser.aft, "[[", "loglik")[2,]    ## Log-likelihoods
print(loglik)
AIC <- -2 * loglik + 2 * nu0
BIC <- -2 * loglik + log(n) * nu0

AFTfit <- data.frame(LogLik = loglik, AIC = AIC, BIC = BIC)
print(round(AFTfit, 1))
#loglogistic model provides best fit
duser.aft <- duser.aft[["loglogistic"]]
summary(duser.aft)
confint(duser.aft)
```

### Plot

```{r}
#extracting info
duser.int <- duser.aft$coefficients[[1]] 
duser.female <- duser.aft$coefficients[[2]]
duser.age <- duser.aft$coefficients[[3]]
duser.scale <- duser.aft$scale
duser.shape <- 1/duser.scale

#mean age
duser |>
  dplyr::group_by(zgen)|>
  dplyr::summarise(mean=mean(age))
#male 20.36495	
#female 19.84530

#creating survival functions to plot S_t
t <- seq(from=0,to=250,by=0.01)
duser.aft.male <- 1/(1+(t*exp(-duser.int-duser.age*20.36495))^duser.shape)
duser.aft.female <- 1/(1+(t*exp(-duser.int-duser.age*20.36495-duser.female))^duser.shape)

png("duser AFT.png")
plot(duser.NPMLE, LEGEND = F,
     XLAB = "Time until HIV-infection (weeks)",
     YLAB = "Survival probability")
lines(x=t,y=duser.aft.male,lty=1,col="blue")
lines(x=t,y=duser.aft.female,lty=1,col="red")
legend("topright",lty = c(1,2,1,1),
       col = c("black","black","blue","red"),
       legend=c("NPMLE male","NPMLE female","AFT male","AFT female"),
       box.lty=0)
dev.off()
```
